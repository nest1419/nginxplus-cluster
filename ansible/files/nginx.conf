worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile      on;
    keepalive_timeout 65;

    # üîÅ Upstream con least_conn para APP1
    upstream app1_backend {
        least_conn;
        server 10.0.1.10:3000;
        server 10.0.1.11:3000;
    }

    # Upstream con least_conn para APP2
    upstream app2_backend {
        least_conn;
        server 10.0.2.10:4000;
        server 10.0.2.11:4000;
    }

    # HTTPS para app1.empresa.com
    server {
        listen 443 ssl;
        server_name app1.empresa.com;

        ssl_certificate     /etc/nginx/ssl/app1.crt;
        ssl_certificate_key /etc/nginx/ssl/app1.key;

        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://app1_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTPS para app2.empresa.com
    server {
        listen 443 ssl;
        server_name app2.empresa.com;

        ssl_certificate     /etc/nginx/ssl/app2.crt;
        ssl_certificate_key /etc/nginx/ssl/app2.key;

        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://app2_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Redirecci√≥n de HTTP ‚Üí HTTPS (opcional pero recomendado)
    server {
        listen 80;
        server_name app1.empresa.com app2.empresa.com;
        return 301 https://$host$request_uri;
    }
}